name: Build for ToolJet
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
    unit-test: 
      runs-on: ubuntu-latest
      # needs: build

      container: node:10.18-jessie
      services:
      # Label used to access the service container
        postgres:
        # Docker Hub image
          image: postgres
      steps:
        - uses: actions/checkout@v2
          with:
            clean: false

        - name: Create .env.test file
          run: |
            touch .env
            echo TOOLJET_HOST: http://localhost:8082 >> .env.test
            echo LOCKBOX_MASTER_KEY: 13c9b8364ae71f714774c82498ba328813069e48d80029bb29f49d0ada5a8e40 >> .env.test
            echo SECRET_KEY_BASE: ea85064ed42ad02cfc022e66d8bccf452e3fa1142421cbd7a13592d91a2cbb866d6001060b73a98a65be57e65524357d445efae00a218461088a706decd62dcb >> .env.test
            echo NODE_ENV: test >> .env.test
            echo PG_HOST: postgres >> .env.test
            echo PG_PORT: 5432 >> .env.test
            echo PG_USER: postgres >> .env.test
            echo PG_PASS: postgres >> .env.test
            echo PG_DB: tooljet_test >> .env.test
            echo ORM_LOGGING: error >> .env.test
            cat .env.test
        - name: Create .env file
          run: |
            touch .env
            echo TOOLJET_HOST: http://localhost:8082 >> .env
            echo LOCKBOX_MASTER_KEY: 13c9b8364ae71f714774c82498ba328813069e48d80029bb29f49d0ada5a8e40 >> .env
            echo SECRET_KEY_BASE: ea85064ed42ad02cfc022e66d8bccf452e3fa1142421cbd7a13592d91a2cbb866d6001060b73a98a65be57e65524357d445efae00a218461088a706decd62dcb >> .env
            echo NODE_ENV: dev >> .env
            echo PG_HOST: postgres >> .env
            echo PG_PORT: 5432 >> .env
            echo PG_USER: postgres >> .env
            echo PG_PASS: postgres >> .env
            echo PG_DB: tooljet_test >> .env
            echo ORM_LOGGING: error >> .env
            cat .env

        - run: docker-compose -f ./docker-compose.yaml build
        - run: docker-compose run server npm run test
        # - run: npm ci
        # # - run: npm --prefix server ci && npm --prefix frontend ci
        # - run: npm --prefix frontend ci && NODE_ENV=test npm --prefix frontend run build && npm --prefix server ci && NODE_ENV=test npm --prefix server run build
        # - run: npm --prefix server run test